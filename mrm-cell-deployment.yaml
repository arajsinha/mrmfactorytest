# This is the internal "headless" service that allows the etcd nodes to find each other.
apiVersion: v1
kind: Service
metadata:
  name: mrm-cell-internal
spec:
  clusterIP: None # This makes it a headless service.
  selector:
    app: mrm-cell
  ports:
  - name: peer
    port: 2380
  - name: client
    port: 2379
---
# This is the internal service for the public-facing API. The Gateway will point to this.
apiVersion: v1
kind: Service
metadata:
  name: mrm-cell-public
spec:
  selector:
    app: mrm-cell
  ports:
  - name: http-main
    port: 8080
    targetPort: 8080
---
# This is the final, correct StatefulSet for your 3-node HA cluster.
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mrm-cell
spec:
  serviceName: "mrm-cell-internal"
  replicas: 3
  selector:
    matchLabels:
      app: mrm-cell
  template:
    metadata:
      labels:
        app: mrm-cell
    spec:
      # This ensures your pods are spread across different Availability Zones for HA.
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: "topology.kubernetes.io/zone"
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app: mrm-cell
      
      # This tells the pod which service account to use for its permissions.
      serviceAccountName: default # Assumes the RoleBinding is in the 'default' namespace

      containers:
      - name: mrm-cell-container
        image: arajsinha/mrm-cell-factory:latest
        ports:
        - containerPort: 8080
        
        # --- THIS IS THE FINAL FIX ---
        # We are only providing the one command-line flag that our new,
        # streamlined orchestrator application actually understands.
        command:
        - "./mrm-cell"
        - "--http-port=8080"
        # --- END OF FIX ---
        
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 15